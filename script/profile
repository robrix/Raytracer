#!/bin/bash
# Usage: script/profile ARGS...
# Builds and runs raytracer with the given args with profiling enabled.

set -e

HEAD_SHA=$(git rev-parse --short HEAD)
CURRENT_BRANCH=$(git symbolic-ref HEAD 2>/dev/null | awk -F/ {'print $NF'})

PROJECT_DIR="$(dirname $0)/.."
PROFILES_DIR="$PROJECT_DIR/profiles"
TODAY="$(date "+%Y-%m-%d")"
NOW=$(date "+%H_%M_%S")
PROFILE_DIR="$PROFILES_DIR/$TODAY/$NOW-$CURRENT_BRANCH-$HEAD_SHA/"
OUTFILE="$PROFILE_DIR/profile.out.log"
ERRFILE="$PROFILE_DIR/profile.err.log"

cabal new-build --enable-profiling -O2

mkdir -p "$PROFILE_DIR"

# NB: Do not try and use -N, it doesn't work and defaults to -N1.
cores=$(sysctl -n machdep.cpu.core_count || echo 4)
cabal new-run --enable-profiling -O2 exe:raytracer -- +RTS -sstderr -N$((cores * 2)) -A8m -n2m -p -s -h -i0.1 -L1000 -xt -RTS $@ > "$OUTFILE" 2> "$ERRFILE"

profiteur raytracer.prof || true

hp2pretty raytracer.hp

for f in "$PROJECT_DIR/"raytracer.*; do
	if [ "$f" != "$PROJECT_DIR/"raytracer.cabal ]; then
		mv "$f" "$PROFILE_DIR"
	fi
done

(>&2 echo "branch: $CURRENT_BRANCH ($HEAD_SHA)")

open "$PROFILE_DIR"
